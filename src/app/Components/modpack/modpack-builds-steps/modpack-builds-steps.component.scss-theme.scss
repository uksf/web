@use '~@angular/material' as mat;
@import "~@angular/material/theming";

@mixin modpack-builds-steps-component-theme($theme) {
    $foreground: map-get($theme, foreground);
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $background: map-get($theme, background);

    app-modpack-builds-steps {
        a {
          color: mat.get-color-from-palette($primary);
        }

        .log-container {
            .log-steps {
              border-right: 1px solid mat.get-color-from-palette($background, selected);

              h3 {
                border-bottom: 1px solid mat.get-color-from-palette($background, selected);
              }

              .log-step-item {
                border-bottom: 1px solid mat.get-color-from-palette($background, selected);

                &.selected {
                  color: mat.get-color-from-palette($primary, default);
                  background-color: mat.get-color-from-palette($background, selected);
                }

                &:hover {
                  background-color: mat.get-color-from-palette($background, hover);
                }
              }
            }

            .log-output {
                .log-output-header {
                    .buttons {
                        .mat-raised-button {
                            &.scroll {
                                &.autoScroll {
                                  background-color: mat.get-color-from-palette($background, selected);
                                }
                            }
                        }
                    }
                }

                .build-log {
                  color: mat.get-color-from-palette($background, contrast);
                  background-color: transparent;

                  .log-item {
                    color: mat.get-color-from-palette($foreground, base);

                    &.selected {
                      background-color: mat.get-color-from-palette($background, selected);

                      .link {
                        color: mat.get-color-from-palette($background, contrast);
                      }
                    }

                    &:hover {
                      background-color: mat.get-color-from-palette($background, hover);

                      &.selected {
                        background-color: mat.get-color-from-palette($background, selected);
                      }

                      .link {
                        color: mat.get-color-from-palette($foreground, base);
                      }
                    }

                        .link {
                            color: transparent;

                            &:hover {
                              color: mat.get-color-from-palette($primary);
                            }
                        }
                    }
                }
            }

            i {
              color: mat.get-color-from-palette($background, contrast);
            }
        }
    }
}
